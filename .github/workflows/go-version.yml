name: Go Version

on:
  push:
    paths: [Dockerfile]

permissions:
  contents: write

jobs:
  go-tools:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938

      - name: Check Go Version Increment
        run: |
          dv=$(awk -F'[:\ ]' '/^FROM golang/ {print $3}' Dockerfile)
          gv=$(awk '/^go/ {print $NF}' go.mod)
          if [ "$dv" != "$gv" ]; then
            echo "### Go version change detected." >> $GITHUB_STEP_SUMMARY
            echo "* Was: $gv." >> $GITHUB_STEP_SUMMARY
            echo "* Now: $dv." >> $GITHUB_STEP_SUMMARY
            sed -i -e "s|^go .*|go $dv|" go.mod
          fi

      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32
        with:
          go-version-file: go.mod

      - name: Apply Formatting
        run: go fmt .

      - name: Update Go Module Requirements and Dependencies
        run: go mod tidy

      - name: Check Delta
        id: go-module-check
        run: |
          if git diff --name-only | grep -qE '^go.(mod|sum)$|.go$'; then
            echo "passed=true" >> $GITHUB_OUTPUT
            echo "### Go module changes detected." >> $GITHUB_STEP_SUMMARY
          else
            echo "passed=false" >> $GITHUB_OUTPUT
            echo "### No Go module changes detected." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Validate Package Installation
        if: steps.go-module-check.outputs.passed == 'true'
        run: |
          for pkg in $(awk -F \"  '/\t_/ {print $2}' tools.go) ; do
            go install $pkg
            if eval "$(basename $pkg) -h" ; then
              echo "* $pkg :bowtie:" >> $GITHUB_STEP_SUMMARY
            else
              echo "* $pkg :broken_heart:" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
          done

      - name: Update Go Module
        if: steps.go-module-check.outputs.passed == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add --all --verbose
          git commit --message "build(go-deps): update go and reconcile module requirements"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}